{"version":3,"sources":["api/cars.ts","api/colors.ts","App.tsx","index.tsx"],"names":["id","brand","rentPrice","colorId","name","App","useState","searchValue","setSearchValue","chooseColor","colorsFromServer","setChooseColor","displayedCars","carsFromServer","filter","car","toLowerCase","trim","includes","type","placeholder","onChange","event","value","target","map","color","carColor","find","style","textTransform","ReactDOM","render","document","getElementById"],"mappings":"qNAAe,GACb,CACEA,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,EAAGC,MAAO,UAAWC,UAAW,IAAKC,QAAS,GAEpD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEH,GAAI,EAAGC,MAAO,SAAUC,UAAW,GAAIC,QAAS,GAElD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,GAAIC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAElD,CACEH,GAAI,GAAIC,MAAO,aAAcC,UAAW,IAAKC,QAAS,IChC3C,GACb,CAAEH,GAAI,EAAGI,KAAM,SACf,CAAEJ,GAAI,EAAGI,KAAM,SACf,CAAEJ,GAAI,EAAGI,KAAM,Q,OCCJC,EAAgB,WAC3B,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAyDF,mBAAS,IAAlE,0BAAOG,OAAP,MAAqBC,EAArB,EAAuCC,EAAvC,KACIC,EAAgBC,EACjBC,QAAO,SAAAC,GAAG,OAAIA,EAAId,MAAMe,cACtBC,OAAOC,SAASX,EAAYS,kBAiBjC,OAfIP,IACFG,EAAgBC,EACbC,QAAO,SAAAC,GAAG,OAAIA,EAAId,MAAMe,cACtBC,OAAOC,SAASX,EAAYS,gBAC1BD,EAAIZ,WAAaM,MAYxB,gCACE,uBACEU,KAAK,SACLC,YAAY,oBACZC,SAAU,SAACC,GAbjB,IAAuBC,IAcDD,EAAME,OAAOD,MAbjCf,EAAee,MAiBb,wBACEF,SAAU,SAACC,GAfjB,IAAqBC,IAgBDD,EAAME,OAAOD,MAf/BZ,EAAeY,IAab,SAKGb,EAAiBe,KAAI,SAAAC,GAAK,OACzB,wBAAuBH,MAAOG,EAAM1B,GAApC,SACG0B,EAAMtB,MADIsB,EAAM1B,SAMvB,kCACE,gCACE,+BACE,oCACA,uCACA,uCACA,iDAGJ,gCAEIY,EAAca,KAAI,SAAAV,GAAQ,IAAD,EACjBY,EAAQ,UAAGjB,EACdkB,MAAK,SAAAF,GAAK,OAAIA,EAAM1B,KAAOe,EAAIZ,kBADpB,aAAG,EAC2BC,KAE5C,OACE,+BACE,6BAAKW,EAAIf,KACT,6BAAKe,EAAId,QACT,oBAAI4B,MAAO,CAAEC,cAAe,aAAcJ,MAAM,GAAD,OAAKC,IAApD,SAAmEA,IACnE,6BAAKZ,EAAIb,2B,MC/D3B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eee04bec.chunk.js","sourcesContent":["export default [\n  {\n    id: 1, brand: 'Audi', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 2, brand: 'Audi', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 3, brand: 'Ferarri', rentPrice: 500, colorId: 3,\n  },\n  {\n    id: 4, brand: 'Ford', rentPrice: 80, colorId: 1,\n  },\n  {\n    id: 5, brand: 'Peugot', rentPrice: 50, colorId: 1,\n  },\n  {\n    id: 6, brand: 'Ford', rentPrice: 150, colorId: 1,\n  },\n  {\n    id: 7, brand: 'Ford', rentPrice: 140, colorId: 2,\n  },\n  {\n    id: 8, brand: 'Lada', rentPrice: 20, colorId: 3,\n  },\n  {\n    id: 9, brand: 'Opel', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 10, brand: 'Opel', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 11, brand: 'Mitsubishi', rentPrice: 300, colorId: 1,\n  },\n];\n","export default [\n  { id: 1, name: 'white' },\n  { id: 2, name: 'black' },\n  { id: 3, name: 'red' },\n];\n","import React, { useState } from 'react';\nimport carsFromServer from './api/cars';\nimport colorsFromServer from './api/colors';\n\nexport const App: React.FC = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [chooseColor = colorsFromServer, setChooseColor] = useState('');\n  let displayedCars = carsFromServer\n    .filter(car => car.brand.toLowerCase()\n      .trim().includes(searchValue.toLowerCase()));\n\n  if (chooseColor) {\n    displayedCars = carsFromServer\n      .filter(car => car.brand.toLowerCase()\n        .trim().includes(searchValue.toLowerCase())\n        && car.colorId === +chooseColor);\n  }\n\n  function handleOnClick(value: string) {\n    setSearchValue(value);\n  }\n\n  function handleColor(value: string) {\n    setChooseColor(value);\n  }\n\n  return (\n    <div>\n      <input\n        type=\"search\"\n        placeholder=\"Find by car brand\"\n        onChange={(event) => {\n          handleOnClick(event.target.value);\n        }}\n      />\n\n      <select\n        onChange={(event) => {\n          handleColor(event.target.value);\n        }}\n      >\n        {colorsFromServer.map(color => (\n          <option key={color.id} value={color.id}>\n            {color.name}\n          </option>\n        ))}\n      </select>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Brand</th>\n            <th>Color</th>\n            <th>Rent price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            displayedCars.map(car => {\n              const carColor = colorsFromServer\n                .find(color => color.id === car.colorId)?.name;\n\n              return (\n                <tr>\n                  <td>{car.id}</td>\n                  <td>{car.brand}</td>\n                  <td style={{ textTransform: 'capitalize', color: `${carColor}` }}>{carColor}</td>\n                  <td>{car.rentPrice}</td>\n                </tr>\n              );\n            })\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}